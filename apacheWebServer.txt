Apache Webserver 22/23/24 

#installing Apache HTTP
tar xvf  httpd-1.2.3.tar
gzip -d httpd-1.2.4.tar.gz
or
yum install httpd

You can restart by going to Apache instance location >> bin folder and execute apachectl script.
./apachectl stop
./apachectl start

You may also use a script located in /etc/init.d/. Mostly it will be named either “apache” or “httpd”
/etc/init.d/apache stop
/etc/init.d/apache start

Another procedure would be using services
httpd stop
service httpd start

#ensure webserver is getting started after a server reboot
If running Linux, then you can put a script in /etc/init.d/ and 
enable to start on boot using chkconfig command
Let’s say you create a file called apache and put under /etc/init.d
chkconfig --add apache
chkconfig apache on

if on Windows, then ensure startup type is selected “Automatic.”


How would you kill the Apache if graceful-stop doesn’t work?
If running on Linux, then can use kill command.
Find out the PID of Apache by using ps -ef |grep http
kill pid
or kill -9 pid


graceful-stop? normal stop operation

The default port for HTTP is 80 and HTTPS 443

httpd.conf is the main configuration file used in Apache.

#version
Login to a web server
Go to apache instance and bin folder
Executed httpd with -v to get the version details.
[root@lab sbin]# ./httpd -v
Server version: Apache/2.2.15 (Unix)
Server built:   Jul 18 2016 15:24:00
[root@lab sbin]#

 you can also use the rpm command to check the installed version.
[root@lab ~]# rpm -qa |grep httpd
httpd-2.2.15-54.el6.centos.x86_64
httpd-tools-2.2.15-54.el6.centos.x86_64
[root@lab ~]#

#How to hide server version details in the HTTP response header?
Add the following in httpd.conf file and restart the webserver
ServerTokens Prod
ServerSignature Off
This will hide the version and show the Server as “Apache” Only.

#webserver running or not
Login to a web server and grep for “httpd” process
ps -ef |grep httpd
or
telnet or nc to hostname, Port
or
accessing url

#command to check httpd version
rpm -qa | hrep httpd
httpd --version

#Listen in httpd.conf file
Port number on which to listen for http transfers

#Listen to only one IP address
Listen <ServerIPAddress>:<Port>
e.g Listen 10.10.10.10:80

#Apache run with non-root/nobody user
 by adding User & Group directive in httpd.conf file
 User apache
Group apache

#disable directory indexing?
You can use “Options -Indexes” in the respective directory directive.
<Directory />
       Options -Indexes
</Directory>

# log files generated by Apache?
There are two popular log files created;
access.log – all request details with the status code
error.log – capture all the errors within apache or connecting to the backend

You can change the logging level to debug by ensuring the following in httpd.conf file.
LogLevel debug

You can use a mod_proxy module to use as a proxy server. The mod_proxy module can be used to connect to the backend server like Tomcat, WebLogic, WebSphere, etc.


How to configure Apache log, so it captures the time taken to serve a request?
You can add “%D” in httpd.conf file under LogFormat directive to capture the response time taken to serve the request. It will show time in microseconds.
LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %D" combined

#verify httpd.conf file to ensure no configuration syntax error?
httpd –t will help you to check the syntax.
[root@lab httpd]# /usr/sbin/httpd -t
Syntax OK
[root@lab httpd]#
OR
[root@lab ~]# /usr/sbin/apachectl configtest
Syntax OK
[root@lab ~]#

How to find httpd.conf file if you don’t know the installation location?
In Linux, you can use find command
find / -name httpd.conf

#How to disable trace HTTP requests?
Add the following in httpd.conf file and restart the instance
TraceEnable off

#perform Apache performance benchamak
tools: ApacheBench, SIEGE
to perform the load test on web servers including Apache.
Another option to perform stress test online to see the overall how web app performs under load

#How to install the third-party module?
You can make use of Apache Toolbox. Once downloaded, extract it using the tar utility.
tar  -xf   Apachetoolbox-1.5.72.tar.gz
Navigate to the folder Apachetoolbox-1.5.72 using the cd command and run the command below to select modules for your Apache server.
./install.sh
It provides modules such as  mod_ip_forwarding, mod_auth_mysql and mod_auth_samba to compile with the Apache webserver. Although you can include these modules manually, it is easier with Apache Toolbox.



https://geekflare.com/apache-interview-questions-answers/